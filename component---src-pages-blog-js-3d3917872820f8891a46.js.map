{"version":3,"file":"component---src-pages-blog-js-3d3917872820f8891a46.js","mappings":"0MAkBA,IACA,EADiB,cAhBjB,SAAwBA,EAAOC,GAC7B,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,EACbC,OAAQ,eACR,cAAe,OACfC,IAAKR,GACJD,GAAqB,gBAAoB,OAAQ,CAClDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,iCCIP,IACA,EADiB,cAhBjB,SAAsBZ,EAAOC,GAC3B,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,EACbC,OAAQ,eACR,cAAe,OACfC,IAAKR,GACJD,GAAqB,gBAAoB,OAAQ,CAClDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,+FCIP,IACA,EADiB,cAhBjB,SAAkBZ,EAAOC,GACvB,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,EACbC,OAAQ,eACR,cAAe,OACfC,IAAKR,GACJD,GAAqB,gBAAoB,OAAQ,CAClDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,4ECPCC,EAASC,EAAQ,MAAjBD,KA2CR,EAzCiB,SAAC,GAAc,IAAZE,EAAW,EAAXA,KAClB,OACE,uBAAKC,UAAU,gDACb,uBAAKA,UAAU,oEACb,uBAAKA,UAAU,sEACb,uBAAKA,UAAU,sBACb,wBAAMA,UAAU,8EACbD,EAAKE,YAAYC,MAGtB,sBAAIF,UAAU,0BAA0BD,EAAKE,YAAYE,OACzD,qBAAGH,UAAU,uDACVD,EAAKK,SAER,gBAACP,EAAD,CACEQ,GAAIN,EAAKE,YAAYK,KACrBN,UAAU,sEAEV,yCACA,gBAAC,EAAD,CAAgBA,UAAU,aAE5B,uBAAKA,UAAU,wCACb,uBAAKA,UAAU,+BACb,wBAAMA,UAAU,eACd,gBAAC,EAAD,CAAcA,UAAU,aAE1B,wBAAMA,UAAU,eAAeD,EAAKE,YAAYM,OAElD,uBAAKP,UAAU,0BACb,wBAAMA,UAAU,eACd,gBAAC,EAAD,CAAUA,UAAU,aAEtB,wBAAMA,UAAU,eAAhB,4BCtBd,GAjBiBF,EAAQ,MAAjBD,KAES,SAAC,GAAe,IACzBW,EADwB,EAAZC,MAEfC,QAAO,SAACC,GAAD,QAAYA,EAAKC,KAAKX,YAAYM,QACzCM,KAAI,SAACF,GAAD,OAAU,gBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAIhB,KAAMY,EAAKC,UAEzD,OACE,2BAASZ,UAAU,uEACjB,uBAAKA,UAAU,sCACb,sBAAIA,UAAU,2BAAd,mBAEDQ,KCUP,EAjBa,SAAC,GAIP,IAFkBC,EAEnB,EAHJO,KACEC,kBAAqBR,MAGTA,EACXC,QAAO,SAACC,GAAD,QAAYA,EAAKC,KAAKX,YAAYM,QACzCM,KAAI,SAACF,GAAD,OAAU,gBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAIhB,KAAMY,EAAKC,UACzD,OACE,+BACE,gBAACM,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAKhB,MAAM,SACX,gBAAC,EAAD,CAAUM,MAAOA","sources":["webpack://gmlunesa.github.io/./node_modules/@heroicons/react/outline/esm/ArrowRightIcon.js","webpack://gmlunesa.github.io/./node_modules/@heroicons/react/outline/esm/CalendarIcon.js","webpack://gmlunesa.github.io/./node_modules/@heroicons/react/outline/esm/UserIcon.js","webpack://gmlunesa.github.io/./src/components/BlogLink/BlogLink.js","webpack://gmlunesa.github.io/./src/sections/Blog/BlogList.js","webpack://gmlunesa.github.io/./src/pages/blog.js"],"sourcesContent":["import * as React from \"react\";\n\nfunction ArrowRightIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M14 5l7 7m0 0l-7 7m7-7H3\"\n  }));\n}\n\nvar ForwardRef = React.forwardRef(ArrowRightIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction CalendarIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n  }));\n}\n\nvar ForwardRef = React.forwardRef(CalendarIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction UserIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n  }));\n}\n\nvar ForwardRef = React.forwardRef(UserIcon);\nexport default ForwardRef;","import * as React from \"react\";\r\nimport {\r\n  ArrowRightIcon,\r\n  UserIcon,\r\n  CalendarIcon,\r\n} from \"@heroicons/react/outline\";\r\n\r\nconst { Link } = require(\"gatsby\");\r\n\r\nconst BlogLink = ({ post }) => {\r\n  return (\r\n    <div className=\"dark:bg-gray-800 dark:text-gray-50 my-4 px-2\">\r\n      <div className=\"container grid grid-cols-12 mx-auto bg-gray-200 dark:bg-gray-900\">\r\n        <div className=\"flex flex-col p-6 col-span-full row-span-full lg:col-span-8 lg:p-8\">\r\n          <div className=\"flex justify-start\">\r\n            <span className=\"px-2 py-1 text-xs rounded-full bg-rose-400 text-gray-50 dark:text-gray-900\">\r\n              {post.frontmatter.tag}\r\n            </span>\r\n          </div>\r\n          <h1 className=\"text-2xl font-semibold\">{post.frontmatter.title}</h1>\r\n          <p className=\"flex-1 pt-2 italic text-gray-700 dark:text-gray-200\">\r\n            {post.excerpt}\r\n          </p>\r\n          <Link\r\n            to={post.frontmatter.slug}\r\n            className=\"inline-flex items-center pt-2 pb-6 space-x-2 text-sm text-rose-600\"\r\n          >\r\n            <span>Read more</span>\r\n            <ArrowRightIcon className=\"w-4 h-4\" />\r\n          </Link>\r\n          <div className=\"flex items-center justify-start pt-2\">\r\n            <div className=\"flex space-x-2 text-sm mr-2\">\r\n              <span className=\"self-center\">\r\n                <CalendarIcon className=\"w-4 h-4\" />\r\n              </span>\r\n              <span className=\"self-center\">{post.frontmatter.date}</span>\r\n            </div>\r\n            <div className=\"flex space-x-2 text-sm\">\r\n              <span className=\"self-center\">\r\n                <UserIcon className=\"w-4 h-4\" />\r\n              </span>\r\n              <span className=\"self-center\">Goldy Mariz Lunesa</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogLink;\r\n","import * as React from \"react\";\r\nimport BlogLink from \"../../components/BlogLink\";\r\nconst { Link } = require(\"gatsby\");\r\n\r\nconst BlogList = ({ edges }) => {\r\n  const Posts = edges\r\n    .filter((edge) => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\r\n    .map((edge) => <BlogLink key={edge.node.id} post={edge.node} />);\r\n\r\n  return (\r\n    <section className=\"dark:bg-gray-800 dark:text-gray-100 bg-gray-100 text-gray-800 py-20\">\r\n      <div className=\"container grid grid-cols-1 mx-auto\">\r\n        <h1 className=\"text-3xl font-bold px-2\">Digital garden</h1>\r\n      </div>\r\n      {Posts}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n","import * as React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../components/Layout\";\r\nimport Seo from \"../components/Seo\";\r\nimport BlogLink from \"../components/BlogLink\";\r\nimport BlogList from \"../sections/Blog/BlogList\";\r\n\r\nconst Blog = ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n  },\r\n}) => {\r\n  const Posts = edges\r\n    .filter((edge) => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\r\n    .map((edge) => <BlogLink key={edge.node.id} post={edge.node} />);\r\n  return (\r\n    <section>\r\n      <Layout>\r\n        <Seo title=\"Blog\" />\r\n        <BlogList edges={edges} />\r\n      </Layout>\r\n    </section>\r\n  );\r\n};\r\nexport default Blog;\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 200)\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            slug\r\n            title\r\n            tag\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","Link","require","post","className","frontmatter","tag","title","excerpt","to","slug","date","Posts","edges","filter","edge","node","map","key","id","data","allMarkdownRemark","Layout","Seo"],"sourceRoot":""}