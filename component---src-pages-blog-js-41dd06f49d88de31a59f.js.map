{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/subscribe.js"],"names":["BlogList","Slider","React","useState","position","setPosition","text","type","step","max","min","value","onChange","e","target","BlogPage","data","title","className","key","allMdx","totalCount","nodes","map","frontmatter","fields","id","to","slug","SubscribeForm","props","submitForm","bind","state","status","render","this","onSubmit","action","method","name","aria-describedby","placeholder","required","role","ev","preventDefault","form","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","Component"],"mappings":"2FAAA,gKAsCaA,EAAQ,aAsBRC,EAAS,WAAO,IAAD,EACMC,IAAMC,SAAS,KAAxCC,EADmB,KACTC,EADS,KAEtBC,EAAO,KAQX,MAPiB,MAAbF,EACFE,EAAO,KACe,MAAbF,EACTE,EAAO,KACe,MAAbF,IACTE,EAAO,MAGP,6BACE,4BAAKA,GAAW,IAChB,2BACEC,KAAK,QACLC,KAAK,IACLC,IAAI,IACJC,IAAI,IACJC,MAAOP,EACPQ,SAAU,SAAAC,GAAC,OAAIR,EAAYQ,EAAEC,OAAOH,YAK7BI,UA5EE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,6BAASC,UAAU,QACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,SACb,wDACA,wBAAIC,IAAKH,EAAKI,OAAOC,YAAaL,EAAKI,OAAOC,WAA9C,WAEF,6BACGL,EAAKI,OAAOE,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,GAAxB,OACrB,oCACE,kBAAC,OAAD,CAAMC,GAAIF,EAAOG,KAAMT,IAAKM,EAAOG,MACjC,yBAAKV,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QAAQC,IAAKO,GACzBF,EAAYP,eAQ3B,kBAAC,IAAD,W,iGC9BaY,E,oBACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,WAAa,EAAKA,WAAWC,K,yHAAhB,KAClB,EAAKC,MAAQ,CACXC,OAAQ,IAJO,E,kHAQnBC,OAAA,WAAU,IACAD,EAAWE,KAAKH,MAAhBC,OAER,OACE,6BAAShB,UAAU,iBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,8BACZ,IACD,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,0DACA,gIAIA,0BACEmB,SAAUD,KAAKL,WACfO,OAAM,gCACNC,OAAO,OACPb,GAAG,aAEH,yBAAKR,UAAU,mBAEb,2BACEX,KAAK,OACLiC,KAAK,YACLtB,UAAU,eACVQ,GAAG,gBACHe,mBAAiB,YACjBC,YAAY,kBACZC,UAAQ,KAIZ,yBAAKzB,UAAU,mBAEb,2BACEX,KAAK,QACLiC,KAAK,QACLtB,UAAU,eACVQ,GAAG,iBACHe,mBAAiB,YACjBC,YAAY,qBACZC,UAAQ,KAIA,YAAXT,EACC,yBAAKhB,UAAU,sBAAsB0B,KAAK,SAA1C,0DAIA,4BAAQ1B,UAAU,wBAAlB,aAIU,UAAXgB,GACC,yBAAKhB,UAAU,0BAA0B0B,KAAK,SAA9C,mEAMJ,uBAAG1B,UAAU,cAAb,iD,EAkBhBa,WAAA,SAAWc,GAAK,IAAD,OACbA,EAAGC,iBACH,IAAMC,EAAOF,EAAG/B,OACVE,EAAO,IAAIgC,SAASD,GACpBE,EAAM,IAAIC,eAChBD,EAAIE,KAAKJ,EAAKR,OAAQQ,EAAKT,QAC3BW,EAAIG,iBAAiB,SAAU,oBAC/BH,EAAII,mBAAqB,WACnBJ,EAAIK,aAAeJ,eAAeK,OACnB,MAAfN,EAAIf,QACNa,EAAKS,QACL,EAAKC,SAAS,CAAEvB,OAAQ,aAExB,EAAKuB,SAAS,CAAEvB,OAAQ,YAG5Be,EAAIS,KAAK1C,I,GA3G8B2C","file":"component---src-pages-blog-js-41dd06f49d88de31a59f.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\n\r\nimport SEO from \"../components/seo\"\r\nimport SubscribeForm from \"../components/subscribe\"\r\n\r\nconst BlogPage = ({ data }) => (\r\n  <Layout>\r\n    <SEO title=\"Blog\" />\r\n    <section className=\"blog\">\r\n      <div className=\"container\">\r\n        <div className=\"title\">\r\n          <h1>Blog | My digital garden</h1>\r\n          <h4 key={data.allMdx.totalCount}>{data.allMdx.totalCount} Posts</h4>\r\n        </div>\r\n        <div>\r\n          {data.allMdx.nodes.map(({ frontmatter, fields, id }) => (\r\n            <>\r\n              <Link to={fields.slug} key={fields.slug}>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"col-8\" key={id}>\r\n                      {frontmatter.title}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </>\r\n          ))}\r\n        </div>\r\n        <SubscribeForm />\r\n      </div>\r\n    </section>\r\n  </Layout>\r\n)\r\n\r\nexport const BlogList = graphql`\r\n  query blogListQuery {\r\n    allMdx(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { published: { eq: true } } }\r\n    ) {\r\n      nodes {\r\n        fields {\r\n          slug\r\n        }\r\n        id\r\n        excerpt\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"YYYY\")\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`\r\n\r\nexport const Slider = () => {\r\n  const [position, setPosition] = React.useState(\"1\")\r\n  let text = null\r\n  if (position === \"0\") {\r\n    text = \"üëà\"\r\n  } else if (position === \"1\") {\r\n    text = \"üëç\"\r\n  } else if (position === \"2\") {\r\n    text = \"üëâ\"\r\n  }\r\n  return (\r\n    <div>\r\n      <h4>{text}</h4>{\" \"}\r\n      <input\r\n        type=\"range\"\r\n        step=\"1\"\r\n        max=\"2\"\r\n        min=\"0\"\r\n        value={position}\r\n        onChange={e => setPosition(e.target.value)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default BlogPage\r\n","import React, { Component } from \"react\"\r\n\r\nexport default class SubscribeForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.submitForm = this.submitForm.bind(this)\r\n    this.state = {\r\n      status: \"\",\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { status } = this.state\r\n\r\n    return (\r\n      <section className=\"subscribeform\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            {\" \"}\r\n            <div className=\"col-lg-6 col-md-6 col-s-12\">\r\n              <div className=\"card shadow-sm\">\r\n                <div className=\"card-body\">\r\n                  <h2>Tech content to your inbox</h2>\r\n                  <p>\r\n                    Thank you for reading! Join my mailing list to be the first\r\n                    to read about my thoughts on the web.\r\n                  </p>\r\n                  <form\r\n                    onSubmit={this.submitForm}\r\n                    action={`https://formspree.io/${process.env.FORMSPREE_API_KEY_SUBSCRIBE}`} // \"https://formspree.io/\" // {\"https://formspree.io/\" + data.site.siteApiKeys.formSpree}\r\n                    method=\"POST\"\r\n                    id=\"contactId\"\r\n                  >\r\n                    <div className=\"form-group mt-4\">\r\n                      {/* <label htmlFor=\"subscribeName\">Your first name</label> */}\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        className=\"form-control\"\r\n                        id=\"subscribeName\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        placeholder=\"Your first name\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group mt-2\">\r\n                      {/* <label htmlFor=\"subscribeEmail\">Email address</label> */}\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"subscribeEmail\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        placeholder=\"Your email address\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    {status === \"SUCCESS\" ? (\r\n                      <div className=\"alert alert-success\" role=\"alert\">\r\n                        Thank you for your message! I'll get back to you soon.\r\n                      </div>\r\n                    ) : (\r\n                      <button className=\"btn btn-xl shadow-sm\">\r\n                        Subscribe\r\n                      </button>\r\n                    )}\r\n                    {status === \"ERROR\" && (\r\n                      <div className=\"alert alert-danger mt-2\" role=\"alert\">\r\n                        Uh oh! There was an error. Please refresh and we'll try\r\n                        again.\r\n                      </div>\r\n                    )}\r\n                  </form>\r\n                  <p className=\"disclaimer\">\r\n                    Strictly no spam. Unsubscribe anytime.\r\n                  </p>\r\n                </div>\r\n\r\n                {/* <div className=\"col-lg-4 \">\r\n                  <div className=\"img-container\">\r\n                    <img src={contactimg} />\r\n                  </div>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  submitForm(ev) {\r\n    ev.preventDefault()\r\n    const form = ev.target\r\n    const data = new FormData(form)\r\n    const xhr = new XMLHttpRequest()\r\n    xhr.open(form.method, form.action)\r\n    xhr.setRequestHeader(\"Accept\", \"application/json\")\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState !== XMLHttpRequest.DONE) return\r\n      if (xhr.status === 200) {\r\n        form.reset()\r\n        this.setState({ status: \"SUCCESS\" })\r\n      } else {\r\n        this.setState({ status: \"ERROR\" })\r\n      }\r\n    }\r\n    xhr.send(data)\r\n  }\r\n}\r\n"],"sourceRoot":""}