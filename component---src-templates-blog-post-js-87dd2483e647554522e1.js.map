{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/templates/blogPost.js","webpack:///./src/components/subscribe.js"],"names":["MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","key","fn","query","BlogPost","data","pageContext","title","className","frontmatter","role","aria-label","author","date","timeToRead","fluid","featuredImage","childImageSharp","body","previous","to","fields","slug","next","SubscribeForm","submitForm","state","status","render","this","onSubmit","action","method","id","type","name","aria-describedby","placeholder","required","ev","preventDefault","form","target","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","Component"],"mappings":"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","file":"component---src-templates-blog-post-js-87dd2483e647554522e1.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n\r\nimport SEO from \"../components/seo\"\r\nimport SubscribeForm from \"../components/subscribe\"\r\n\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\r\n\r\nimport Img from \"gatsby-image\"\r\n\r\nconst BlogPost = ({ data, pageContext }) => (\r\n  <Layout>\r\n    {/* {const { frontmatter, body } = data.mdx} */}\r\n    <SEO title=\"Blog\" />\r\n    <section className=\"blogpost\">\r\n      <div className=\"container\">\r\n        <div>\r\n          <div className=\"row justify-content-center mb-4\">\r\n            <div className=\"col-12\">\r\n              <h1>{data.mdx.frontmatter.title}</h1>\r\n            </div>\r\n            <div className=\"col-auto tagline\">\r\n              <span role=\"img\" aria-label=\"Pencil emoji\" className=\"mx-1\">\r\n                ‚úèÔ∏èÔ∏è\r\n              </span>\r\n              {data.mdx.frontmatter.author}\r\n            </div>\r\n            <div className=\"col-auto tagline\">\r\n              <span role=\"img\" aria-label=\"Calendar emoji\" className=\"mx-1\">\r\n                üìÖ\r\n              </span>\r\n              {data.mdx.frontmatter.date}\r\n            </div>\r\n            <div className=\"col-auto tagline\">\r\n              <span role=\"img\" aria-label=\"Eyes emoji\" className=\"mx-1\">\r\n                üëÄ\r\n              </span>\r\n              {data.mdx.timeToRead} mins\r\n            </div>\r\n          </div>\r\n          <Img\r\n            className=\"featured-image\"\r\n            fluid={data.mdx.frontmatter.featuredImage.childImageSharp.fluid}\r\n          />\r\n\r\n          <div className=\"content\">\r\n            <MDXRenderer>{data.mdx.body}</MDXRenderer>\r\n          </div>\r\n\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col-6\">\r\n              {pageContext.previous === false ? null : (\r\n                <>\r\n                  {pageContext.previous && (\r\n                    <Link\r\n                      to={pageContext.previous.fields.slug}\r\n                      className=\"link\"\r\n                      key={pageContext.previous.fields.slug}\r\n                    >\r\n                      <span\r\n                        role=\"img\"\r\n                        aria-label=\"Left pointing emoji\"\r\n                        className=\"mr-1\"\r\n                      >\r\n                        üëà\r\n                      </span>\r\n                      Previous\r\n                    </Link>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className=\"col-6 text-right\">\r\n              {pageContext.next === false ? null : (\r\n                <>\r\n                  {pageContext.next && (\r\n                    <Link\r\n                      to={pageContext.next.fields.slug}\r\n                      className=\"link\"\r\n                      key={pageContext.next.fields.slug}\r\n                    >\r\n                      {\" \"}\r\n                      <span\r\n                        role=\"img\"\r\n                        aria-label=\"Right pointing emoji\"\r\n                        className=\"mr-1\"\r\n                      >\r\n                        üëâ\r\n                      </span>\r\n                      Next\r\n                    </Link>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <SubscribeForm />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </Layout>\r\n)\r\n\r\nexport const query = graphql`\r\n  query PostsBySlug($slug: String!) {\r\n    mdx(fields: { slug: { eq: $slug } }) {\r\n      body\r\n      timeToRead\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM YYYY\")\r\n        author\r\n        featuredImage {\r\n          childImageSharp {\r\n            fluid(maxWidth: 20000) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default BlogPost\r\n","import React, { Component } from \"react\"\r\n\r\nexport default class SubscribeForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.submitForm = this.submitForm.bind(this)\r\n    this.state = {\r\n      status: \"\",\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { status } = this.state\r\n\r\n    return (\r\n      <section className=\"subscribeform\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            {\" \"}\r\n            <div className=\"col-lg-6 col-md-6 col-s-12\">\r\n              <div className=\"card shadow-sm\">\r\n                <div className=\"card-body\">\r\n                  <h2>Tech content to your inbox</h2>\r\n                  <p>\r\n                    Thank you for reading! Join my mailing list to be the first\r\n                    to read about my thoughts on the web.\r\n                  </p>\r\n                  <form\r\n                    onSubmit={this.submitForm}\r\n                    action={`https://formspree.io/${process.env.FORMSPREE_API_KEY_SUBSCRIBE}`} // \"https://formspree.io/\" // {\"https://formspree.io/\" + data.site.siteApiKeys.formSpree}\r\n                    method=\"POST\"\r\n                    id=\"contactId\"\r\n                  >\r\n                    <div className=\"form-group mt-4\">\r\n                      {/* <label htmlFor=\"subscribeName\">Your first name</label> */}\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        className=\"form-control\"\r\n                        id=\"subscribeName\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        placeholder=\"Your first name\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group mt-2\">\r\n                      {/* <label htmlFor=\"subscribeEmail\">Email address</label> */}\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"subscribeEmail\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        placeholder=\"Your email address\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    {status === \"SUCCESS\" ? (\r\n                      <div className=\"alert alert-success\" role=\"alert\">\r\n                        Thank you for your message! I'll get back to you soon.\r\n                      </div>\r\n                    ) : (\r\n                      <button className=\"btn btn-xl shadow-sm\">\r\n                        Subscribe\r\n                      </button>\r\n                    )}\r\n                    {status === \"ERROR\" && (\r\n                      <div className=\"alert alert-danger mt-2\" role=\"alert\">\r\n                        Uh oh! There was an error. Please refresh and we'll try\r\n                        again.\r\n                      </div>\r\n                    )}\r\n                  </form>\r\n                  <p className=\"disclaimer\">\r\n                    Strictly no spam. Unsubscribe anytime.\r\n                  </p>\r\n                </div>\r\n\r\n                {/* <div className=\"col-lg-4 \">\r\n                  <div className=\"img-container\">\r\n                    <img src={contactimg} />\r\n                  </div>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  submitForm(ev) {\r\n    ev.preventDefault()\r\n    const form = ev.target\r\n    const data = new FormData(form)\r\n    const xhr = new XMLHttpRequest()\r\n    xhr.open(form.method, form.action)\r\n    xhr.setRequestHeader(\"Accept\", \"application/json\")\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState !== XMLHttpRequest.DONE) return\r\n      if (xhr.status === 200) {\r\n        form.reset()\r\n        this.setState({ status: \"SUCCESS\" })\r\n      } else {\r\n        this.setState({ status: \"ERROR\" })\r\n      }\r\n    }\r\n    xhr.send(data)\r\n  }\r\n}\r\n"],"sourceRoot":""}