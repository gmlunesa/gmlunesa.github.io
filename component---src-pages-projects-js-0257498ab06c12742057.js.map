{"version":3,"file":"component---src-pages-projects-js-0257498ab06c12742057.js","mappings":"gLAyBA,UAnBiBA,IAIV,IAHLC,MACEC,mBAAmB,MAAEC,KAExBH,EACC,OACEI,EAAAA,cAAA,eACEA,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CACFC,MAAM,gCACNC,YAAY,wBACZC,KAAK,cAEPL,EAAAA,cAACM,EAAAA,EAAI,CAACP,MAAOA,EAAOQ,QAAQ,KAEtB,C,+ECwCd,MA1DiBX,IAAe,IAAd,KAAEY,GAAMZ,GACVa,EAAAA,EAAAA,GAASD,EAAKE,YAW5B,OACEV,EAAAA,cAAA,KACEW,KAAI,6BAA+BH,EAAKH,KACxCO,OAAO,SACPC,IAAI,sBACJC,UAAU,qKAGVd,EAAAA,cAAA,QAAMc,UAAU,iGAChBd,EAAAA,cAAA,OACEe,IAAG,aAAeP,EAAKL,MAAK,mCAC5Ba,IAAKR,EAAKE,WAAWO,IACrBH,UAAU,2BACVI,QAAQ,SAGVlB,EAAAA,cAAA,OAAKc,UAAU,cACbd,EAAAA,cAAA,QACEmB,SAAUX,EAAKY,YACfN,UAAU,mDA5BEO,EA8BAb,EAAKY,YAvBhB,IAAIE,KAAKD,GAAME,wBAAmBC,EANzB,CACdC,KAAM,UACNC,MAAO,OACPC,IAAK,cA4BH3B,EAAAA,cAAA,MAAIc,UAAU,oDACXN,EAAKL,OAGRH,EAAAA,cAAA,KAAGc,UAAU,8EACVN,EAAKoB,SArCMP,KAmDd,ECvDR,MAAM,KAAEQ,GAASC,EAAQ,MAgDzB,MA9CoBlC,IAAe,IAAd,KAAEY,GAAMZ,EAC3B,MAAMmC,GAAQtB,EAAAA,EAAAA,GAASD,EAAKwB,YAAYC,eACxC,OACEjC,EAAAA,cAAC6B,EAAI,CACHK,GAAI1B,EAAKwB,YAAY3B,KACrBS,UAAU,qKAGVd,EAAAA,cAAA,QAAMc,UAAU,iGAChBd,EAAAA,cAACmC,EAAAA,EAAW,CACVpB,IAAG,aAAeP,EAAKwB,YAAY7B,MAAK,iCACxC4B,MAAOA,EACPjB,UAAU,6BAGZd,EAAAA,cAAA,OAAKc,UAAU,cACbd,EAAAA,cAAA,QACEmB,SAAUX,EAAKwB,YAAYI,aAC3BtB,UAAU,kDAETN,EAAKwB,YAAYX,MAEpBrB,EAAAA,cAAA,MAAIc,UAAU,oDACXN,EAAKwB,YAAY7B,OAGpBH,EAAAA,cAAA,KAAGc,UAAU,8EACVN,EAAK6B,SAGRrC,EAAAA,cAAA,OAAKc,UAAU,6BACZN,EAAKwB,YAAYM,KAAKC,KAAKC,GAC1BxC,EAAAA,cAAA,QACEyC,IAAKD,EACL1B,UAAU,wHAGT0B,OAKJ,ECJX,MAtCa5C,IAAwB,IAAvB,MAAEG,EAAK,OAAEQ,GAAQX,EACzB8C,EAAQ,GAWZ,OATEA,EADEnC,EACMR,EAAMwC,KAAKI,GACjB3C,EAAAA,cAAC4C,EAAQ,CAACH,IAAKE,EAAKE,KAAKC,GAAItC,KAAMmC,EAAKE,SAGlC9C,EACLgD,QAAQJ,KAAWA,EAAKE,KAAKb,YAAYX,OACzCkB,KAAKI,GAAS3C,EAAAA,cAACgD,EAAW,CAACP,IAAKE,EAAKE,KAAKC,GAAItC,KAAMmC,EAAKE,SAI5D7C,EAAAA,cAAA,WAASc,UAAU,iEACjBd,EAAAA,cAAA,OAAKc,UAAU,sDACbd,EAAAA,cAAA,OAAKc,UAAU,gCACbd,EAAAA,cAAA,MAAIc,UAAU,sBACXP,EAAM,2DAKTP,EAAAA,cAAA,KAAGc,UAAU,yCACVP,EAAM,qMAOXP,EAAAA,cAAA,OAAKc,UAAU,6DACZ4B,IAGG,C","sources":["webpack://gmlunesa.github.io/./src/pages/projects.js","webpack://gmlunesa.github.io/./src/components/BlogLink/BlogLink.js","webpack://gmlunesa.github.io/./src/components/ProjectLink/ProjectLink.js","webpack://gmlunesa.github.io/./src/sections/List/List.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../components/Layout\";\r\nimport Seo from \"../components/Seo\";\r\nimport List from \"../sections/List/List\";\r\n\r\nconst Projects = ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n  },\r\n}) => {\r\n  return (\r\n    <section>\r\n      <Layout>\r\n        <Seo\r\n          title=\"Projects | Goldy Mariz Lunesa\"\r\n          description=\"Projects by @gmlunesa\"\r\n          slug=\"/projects\"\r\n        />\r\n        <List edges={edges} isBlog={false} />\r\n      </Layout>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 200)\r\n          frontmatter {\r\n            date(formatString: \"YYYY\")\r\n            dateOriginal: date\r\n            slug\r\n            title\r\n            tag\r\n            tags\r\n            description\r\n            featuredImage {\r\n              publicURL\r\n              childImageSharp {\r\n                gatsbyImageData(width: 400)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import * as React from \"react\";\r\nimport { getImage } from \"gatsby-plugin-image\";\r\n\r\nconst BlogLink = ({ post }) => {\r\n  const image = getImage(post.coverImage);\r\n\r\n  const formatDate = (date) => {\r\n    const options = {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    };\r\n\r\n    return new Date(date).toLocaleDateString(undefined, options);\r\n  };\r\n  return (\r\n    <a\r\n      href={`https://blog.gmlunesa.com/${post.slug}`}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      className=\"relative block overflow-hidden rounded-xl border bg-gray-50 shadow-sm transition duration-200 ease-in-out hover:shadow-md\r\n                      dark:bg-gray-900 dark:border-gray-700\"\r\n    >\r\n      <span className=\"absolute inset-x-0 bottom-0 h-2 bg-gradient-to-r from-purple-200 via-fuchsia-400 to-rose-500\"></span>\r\n      <img\r\n        alt={`Cover for ${post.title} blog post by Goldy Mariz Lunesa`}\r\n        src={post.coverImage.url}\r\n        className=\"h-56 w-full object-cover\"\r\n        loading=\"lazy\"\r\n      />\r\n\r\n      <div className=\"p-4 sm:p-6\">\r\n        <time\r\n          dateTime={post.publishedAt}\r\n          className=\"block text-xs text-gray-600 dark:text-gray-400\"\r\n        >\r\n          {formatDate(post.publishedAt)}\r\n        </time>\r\n        <h3 className=\"text-xl font-bold text-gray-900 dark:text-white \">\r\n          {post.title}\r\n        </h3>\r\n\r\n        <p className=\"mt-2 text-sm leading-relaxed text-gray-600 dark:text-gray-400 line-clamp-3\">\r\n          {post.brief}\r\n        </p>\r\n\r\n        {/* <div className=\"my-4 flex flex-wrap gap-1\">\r\n          {post.frontmatter.tags.map((tag) => (\r\n            <span\r\n              className=\"whitespace-nowrap rounded-full bg-rose-100 text-rose-600 px-2.5 py-0.5 text-xs\r\n                              dark:text-rose-100 dark:bg-rose-800\"\r\n            >\r\n              {tag}\r\n            </span>\r\n          ))}\r\n        </div> */}\r\n      </div>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default BlogLink;\r\n","import * as React from \"react\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\nconst { Link } = require(\"gatsby\");\r\n\r\nconst ProjectLink = ({ post }) => {\r\n  const image = getImage(post.frontmatter.featuredImage);\r\n  return (\r\n    <Link\r\n      to={post.frontmatter.slug}\r\n      className=\"relative block overflow-hidden rounded-xl border bg-gray-50 shadow-sm transition duration-200 ease-in-out hover:shadow-md\r\n                      dark:bg-gray-900 dark:border-gray-700\"\r\n    >\r\n      <span className=\"absolute inset-x-0 bottom-0 h-2 bg-gradient-to-r from-purple-200 via-fuchsia-400 to-rose-500\"></span>\r\n      <GatsbyImage\r\n        alt={`Cover for ${post.frontmatter.title} project by Goldy Mariz Lunesa`}\r\n        image={image}\r\n        className=\"h-56 w-full object-cover\"\r\n      />\r\n\r\n      <div className=\"p-4 sm:p-6\">\r\n        <time\r\n          dateTime={post.frontmatter.dateOriginal}\r\n          className=\"block text-xs text-gray-600 dark:text-gray-400\"\r\n        >\r\n          {post.frontmatter.date}\r\n        </time>\r\n        <h3 className=\"text-xl font-bold text-gray-900 dark:text-white \">\r\n          {post.frontmatter.title}\r\n        </h3>\r\n\r\n        <p className=\"mt-2 text-sm leading-relaxed text-gray-600 dark:text-gray-400 line-clamp-3\">\r\n          {post.excerpt}\r\n        </p>\r\n\r\n        <div className=\"my-4 flex flex-wrap gap-1\">\r\n          {post.frontmatter.tags.map((tag) => (\r\n            <span\r\n              key={tag}\r\n              className=\"whitespace-nowrap rounded-full bg-rose-100 text-rose-600 px-2.5 py-0.5 text-xs\r\n                              dark:text-rose-100 dark:bg-rose-800\"\r\n            >\r\n              {tag}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ProjectLink;\r\n","import * as React from \"react\";\r\nimport BlogLink from \"../../components/BlogLink\";\r\nimport ProjectLink from \"../../components/ProjectLink\";\r\n\r\nconst List = ({ edges, isBlog }) => {\r\n  let Posts = [];\r\n  if (isBlog) {\r\n    Posts = edges.map((edge) => (\r\n      <BlogLink key={edge.node.id} post={edge.node} />\r\n    ));\r\n  } else {\r\n    Posts = edges\r\n      .filter((edge) => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\r\n      .map((edge) => <ProjectLink key={edge.node.id} post={edge.node} />);\r\n  }\r\n\r\n  return (\r\n    <section className=\"dark:bg-gray-800 dark:text-gray-100 bg-gray-100 text-gray-800\">\r\n      <div className=\"mx-auto max-w-screen-xl px-4 py-16 sm:px-6 lg:px-8\">\r\n        <div className=\"mx-auto max-w-lg text-center\">\r\n          <h2 className=\"font-bold text-3xl\">\r\n            {isBlog\r\n              ? `Virtual garden of Goldy Mariz`\r\n              : `Projects of Goldy Mariz`}\r\n          </h2>\r\n\r\n          <p className=\"mt-4 text-gray-600 dark:text-gray-400\">\r\n            {isBlog\r\n              ? `A collection of my digitized thoughts and musings, now accessible\r\n            over the cyber web space.`\r\n              : `A collection of my personal projects, as I keep up with new releases and innovations.`}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"mt-8 grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3\">\r\n          {Posts}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"],"names":["_ref","data","allMarkdownRemark","edges","React","Layout","Seo","title","description","slug","List","isBlog","post","getImage","coverImage","href","target","rel","className","alt","src","url","loading","dateTime","publishedAt","date","Date","toLocaleDateString","undefined","year","month","day","brief","Link","require","image","frontmatter","featuredImage","to","GatsbyImage","dateOriginal","excerpt","tags","map","tag","key","Posts","edge","BlogLink","node","id","filter","ProjectLink"],"sourceRoot":""}