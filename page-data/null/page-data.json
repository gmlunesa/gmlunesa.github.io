{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-js","path":"/null/","result":{"data":{"markdownRemark":{"html":"<p>As we approach the first anniversary of the .NET 6 general launch (originally released last November 8, 2021), I thought I would share my favorite additions to the latest and greatest ;) version of .NET 6. Let's review the goals of .NET 6. If we take a look at Microsoft's initiatives available in this <a href=\"https://themesof.net/query?q=group%3Atheme%20is%3Aopen%20-is%3Atask%20-is%3Abottomup%20%28no%3Amilestone%20or%20milestone%3A%3E%3D6.0%20milestone%3A%3C7.0%29\">site</a>, the .NET 6 release aimed to accomplish the following:</p>\n<ul>\n<li>Appeal to net-new developers, students and new technologists</li>\n<li>Provide a great client app development experience</li>\n<li>Get recognized as compelling framework for building cloud native apps</li>\n<li>Improve startup and throughput using runtime execution information</li>\n<li>Grow the .NET ecosystem through increased Quality, Confidence and Support</li>\n<li>Meet Developer Expectations</li>\n</ul>\n<h2>C# 10</h2>\n<p>Alongside .NET 6, Microsoft also launched the newest version of C#, which is C# 10. It introduces new language features, such as global usings (which I wrote about <a href=\"https://gmlunesa.com/blog/net-6-global-using-directives\">here</a>), file-scoped namespaces, extended property patterns, null argument checks, lambda improvements to name a few. The <a href=\"https://devblogs.microsoft.com/dotnet/welcome-to-csharp-10/\">Microsoft blog</a> goes in much more detail about the brand new additions.</p>\n<h2>Minimal APIs</h2>\n<p>The ASP.NET team rolled out the Minimal APIs, which are a straightforward way to create HTTP APIs with minimal dependencies. Minimal APIs hook into ASP.NET Core’s hosting and routing capabilities and allow developers to create fully functioning APIs with just a few lines of code. Hence, they are recommended for everyone who wants to build microservices and apps but only want to include a minimum number of files and dependencies in ASP.NET Core.</p>\n<p>With Minimal APIs, we can build an API with just <strong>3 lines of code</strong>.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> app <span class=\"token operator\">=</span> WebApplication<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">MapGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This structure is very reminiscent of the <a href=\"https://expressjs.com/en/starter/hello-world.html\">Express app model</a>. This is also a great way for newbies or devs from JS background to get into .NET in general.</p>\n<h2>Hot Reload</h2>\n<p>Developers from other spaces, particularly in the front-end ecosystem, are already familiar with the concept of Hot Reload— save a file and see the changes almost instantaneously. Admittedly, establishing hot reload with a statically typed language is exponentially more complex compared to a traditionally interpreted language like JavaScript, so this feature had a long time coming along.</p>\n<p>Finally, with .NET 6, developers can modify the apps managed source code while the application is running, eliminating the need to manually pause, hit a breakpoint or restart as a whole. Personally it still has some bugs here and there but overall it has improved my productivity when developing .NET apps or in other terms, my developer inner-loop performance!</p>\n<h2>Simplified HTTP logging</h2>\n<p>.NET 6 introduced the HTTP Logging middleware for ASP.NET Core applications that logs information about incoming HTTP requests and HTTP responses, like:</p>\n<ul>\n<li>HTTP request information</li>\n<li>Common properties</li>\n<li>Headers</li>\n<li>Body</li>\n<li>HTTP response information</li>\n</ul>\n<p>To enabled the said middleware, just add the following code:</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> builder <span class=\"token operator\">=</span> WebApplication<span class=\"token punctuation\">.</span><span class=\"token function\">CreateBuilder</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> app <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">Build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// Add this code</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">UseHttpLogging</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This feature is really useful and replaces the custom middleware, libraries, or solutions we had to use to log simple HTTP requests before. However, HTTP Logging <em><strong>can reduce the performance of an app</strong></em>. The following needs to be considered to factor in performance impact:</p>\n<ul>\n<li>Filter which parts of the request and/or response to log.</li>\n<li>Filter which headers to log.</li>\n<li>Filter which information about incoming requests and/or responses to log.</li>\n<li>Avoid logging sensitive data such as personally identifiable information (PII).</li>\n<li>Test the performance impact of selected logging properties.</li>\n</ul>\n<h2>Remarks</h2>\n<p>The new LTS version of .NET looks promising, both in the newly introduced features and benchmarks. I've had a great experience with it so far, I haven't encountered any major bug or issue. The Microsoft documentation is also very reliable which makes things definitely easier.</p>\n<p>Microsoft is rolling out a new .NET version, .NET 7 (STS) on the 8th of November 2022! Details are available at <a href=\"https://www.dotnetconf.net/\">.NET Conf website</a>.</p>","excerpt":"As we approach the first anniversary of the .NET 6 general launch (originally released last November…","frontmatter":{"date":null,"dateOriginal":null,"title":"","tag":null,"tags":null,"links":null,"description":null,"slug":null,"featuredImage":null}}},"pageContext":{"id":"66756802-7e78-5101-a9e5-7a5808d520af","frontmatter__slug":null,"__params":{"frontmatter__slug":"null"}}},"staticQueryHashes":["321327506"]}